# ü§ù Script de Configura√ß√£o para Colabora√ß√£o em Reposit√≥rio
# Autor: simacjr@hotmail.com

Write-Host "ü§ù Assistente de Colabora√ß√£o em Reposit√≥rio GitHub" -ForegroundColor Cyan
Write-Host "=================================================="
Write-Host ""

# Verificar status atual do Git
Write-Host "üìã Status Atual do Git:" -ForegroundColor Yellow
git remote -v
git status --porcelain
Write-Host ""

Write-Host "üîß Tipos de Colabora√ß√£o:" -ForegroundColor Yellow
Write-Host "1) Fork + Pull Request (Recomendado para contribui√ß√µes)"
Write-Host "2) Colaborador Direto (Requer permiss√£o do dono)"
Write-Host "3) Transferir Propriedade (Move o reposit√≥rio)"
Write-Host "4) Apenas visualizar configura√ß√£o atual"
Write-Host ""

$choice = Read-Host "Escolha uma op√ß√£o (1-4)"

switch ($choice) {
    "1" {
        Write-Host ""
        Write-Host "üç¥ Configurando para Fork + Pull Request..." -ForegroundColor Green
        
        $repoOriginal = Read-Host "URL do reposit√≥rio original (ex: https://github.com/usuario/repo.git)"
        $seuUsuario = Read-Host "Seu usu√°rio GitHub"
        
        # Extrair nome do reposit√≥rio da URL
        $repoNome = ($repoOriginal -split "/")[-1] -replace "\.git$", ""
        $seuFork = "https://github.com/$seuUsuario/$repoNome.git"
        
        Write-Host ""
        Write-Host "üìù Instru√ß√µes:" -ForegroundColor Cyan
        Write-Host "1. Primeiro, fa√ßa fork do reposit√≥rio original no GitHub:"
        Write-Host "   - Acesse: $($repoOriginal -replace '\.git$', '')"
        Write-Host "   - Clique em 'Fork'"
        Write-Host ""
        
        $forkFeito = Read-Host "Voc√™ j√° fez o fork? (s/n)"
        
        if ($forkFeito -eq "s") {
            Write-Host "Configurando remotes..."
            
            # Remover remote atual se existir
            try {
                git remote remove origin 2>$null
                Write-Host "‚úÖ Remote 'origin' removido"
            } catch {
                Write-Host "‚ÑπÔ∏è Nenhum remote 'origin' para remover"
            }
            
            # Adicionar seu fork como origin
            git remote add origin $seuFork
            Write-Host "‚úÖ Adicionado seu fork como 'origin'"
            
            # Adicionar reposit√≥rio original como upstream
            git remote add upstream $repoOriginal
            Write-Host "‚úÖ Adicionado reposit√≥rio original como 'upstream'"
            
            # Push para seu fork
            Write-Host "Fazendo push para seu fork..."
            git push -u origin main
            
            Write-Host ""
            Write-Host "üéâ Configura√ß√£o conclu√≠da!" -ForegroundColor Green
            Write-Host "Pr√≥ximos passos:"
            Write-Host "1. Acesse: $($seuFork -replace '\.git$', '')"
            Write-Host "2. Clique em 'Compare & pull request'"
            Write-Host "3. Adicione descri√ß√£o e crie o pull request"
        } else {
            Write-Host "‚ùå Fa√ßa o fork primeiro e execute o script novamente." -ForegroundColor Red
        }
    }
    "2" {
        Write-Host ""
        Write-Host "üë• Configurando para Colabora√ß√£o Direta..." -ForegroundColor Green
        
        $repoColaboracao = Read-Host "URL do reposit√≥rio de colabora√ß√£o (ex: https://github.com/usuario/repo.git)"
        
        Write-Host ""
        Write-Host "‚ö†Ô∏è ATEN√á√ÉO:" -ForegroundColor Yellow
        Write-Host "Voc√™ precisa ter permiss√£o de colaborador neste reposit√≥rio."
        Write-Host "Se n√£o tiver, o push falhar√° com erro 403."
        Write-Host ""
        
        $confirmar = Read-Host "Tem certeza que tem permiss√£o de colaborador? (s/n)"
        
        if ($confirmar -eq "s") {
            # Remover remote atual
            try {
                git remote remove origin 2>$null
                Write-Host "‚úÖ Remote 'origin' removido"
            } catch {
                Write-Host "‚ÑπÔ∏è Nenhum remote 'origin' para remover"
            }
            
            # Adicionar reposit√≥rio de colabora√ß√£o
            git remote add origin $repoColaboracao
            Write-Host "‚úÖ Adicionado reposit√≥rio de colabora√ß√£o como 'origin'"
            
            # Push direto
            Write-Host "Fazendo push direto..."
            try {
                git push -u origin main
                Write-Host ""
                Write-Host "üéâ C√≥digo enviado com sucesso!" -ForegroundColor Green
            } catch {
                Write-Host ""
                Write-Host "‚ùå Erro no push. Poss√≠veis causas:" -ForegroundColor Red
                Write-Host "- Voc√™ n√£o tem permiss√£o de colaborador"
                Write-Host "- Reposit√≥rio n√£o existe"
                Write-Host "- Problemas de autentica√ß√£o"
                Write-Host ""
                Write-Host "üí° Sugest√£o: Tente a op√ß√£o 1 (Fork + Pull Request)"
            }
        } else {
            Write-Host "‚ùå Opera√ß√£o cancelada. Use a op√ß√£o 1 para fork." -ForegroundColor Red
        }
    }
    "3" {
        Write-Host ""
        Write-Host "üîÑ Transferir Propriedade do Reposit√≥rio..." -ForegroundColor Green
        
        $usuarioDestino = Read-Host "Usu√°rio de destino"
        $nomeRepo = Read-Host "Nome do reposit√≥rio atual"
        
        Write-Host ""
        Write-Host "üìù Instru√ß√µes para Transfer√™ncia:" -ForegroundColor Cyan
        Write-Host "1. Acesse: https://github.com/SEU_USUARIO/$nomeRepo/settings"
        Write-Host "2. Role at√© 'Danger Zone'"
        Write-Host "3. Clique em 'Transfer ownership'"
        Write-Host "4. Digite: $usuarioDestino"
        Write-Host "5. Confirme a transfer√™ncia"
        Write-Host ""
        Write-Host "‚ö†Ô∏è ATEN√á√ÉO: Esta a√ß√£o √© irrevers√≠vel!" -ForegroundColor Yellow
        
        $abrirBrowser = Read-Host "Deseja abrir o navegador na p√°gina de configura√ß√µes? (s/n)"
        if ($abrirBrowser -eq "s") {
            Start-Process "https://github.com/settings/repositories"
        }
    }
    "4" {
        Write-Host ""
        Write-Host "üìä Configura√ß√£o Atual:" -ForegroundColor Green
        Write-Host ""
        Write-Host "Remotes configurados:"
        git remote -v
        Write-Host ""
        Write-Host "Status do reposit√≥rio:"
        git status
        Write-Host ""
        Write-Host "√öltimos commits:"
        git log --oneline -5
    }
    default {
        Write-Host "‚ùå Op√ß√£o inv√°lida!" -ForegroundColor Red
        exit 1
    }
}

Write-Host ""
Write-Host "üìö Documenta√ß√£o dispon√≠vel:" -ForegroundColor Cyan
Write-Host "- COLABORACAO-REPOSITORIO.md - Guia completo"
Write-Host "- GITHUB-SETUP.md - Configura√ß√£o b√°sica do GitHub"
Write-Host ""

# Manter a janela aberta
Read-Host "Pressione ENTER para sair"